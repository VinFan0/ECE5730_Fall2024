library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity Lab1 is
generic (
N : integer := 4
);
port (
ADC_CLK_10 : in std_logic;
KEY : in std_logic_vector(1 downto 0);
LEDR  : out std_logic_vector((N-1) downto 0)
);
end entity Lab1;

architecture behavioral of Lab1 is

signal sum : unsigned((N-1) downto 0);
signal count: unsigned := 0;

begin

process (ADC_CLK_10, KEY)
begin
if KEY [0] = '0' then
count <= 0;
sum <= (others => '0');
elsif rising_edge(ADC_CLK_10) then
if count > 5000000 then
count <= 0;
sum <= sum + 1;
else
count <= count + 1;
end if;
end process;

LEDR <= sum;

end architecture behavioral;